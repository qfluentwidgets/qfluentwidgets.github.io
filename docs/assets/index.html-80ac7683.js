import{_ as l,a as o,b as p,c as i}from"./AvatarWidget-1261a314.js";import{_ as c,r as u,o as d,c as r,b as n,d as a,a as e,e as t}from"./app-cad4e71c.js";const b={},m={id:"fluentlabelbase",tabindex:"-1"},k=n("a",{class:"header-anchor",href:"#fluentlabelbase","aria-hidden":"true"},"#",-1),h={href:"https://pyqt-fluent-widgets.readthedocs.io/zh-cn/latest/autoapi/qfluentwidgets/components/widgets/label/index.html#qfluentwidgets.components.widgets.label.FluentLabelBase",target:"_blank",rel:"noopener noreferrer"},g=t('<p><img src="'+l+`" alt="FluentLabel"></p><p><code>FluentLabelBase</code> 用于显示文本，可以跟随主题切换文本颜色。这是个抽象类，通常使用它的子类：</p><ul><li>CaptionLabel</li><li>BodyLabel</li><li>StrongBodyLabel</li><li>SubtitleLabel</li><li>TitleLabel</li><li>LargeTitleLabel</li><li>DisplayLabel</li></ul><p>可以自定义标签的颜色：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>label <span class="token operator">=</span> BodyLabel<span class="token punctuation">(</span><span class="token string">&quot;标签&quot;</span><span class="token punctuation">)</span>
label<span class="token punctuation">.</span>setTextColor<span class="token punctuation">(</span>QColor<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> QColor<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 浅色主题，深色主题</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v={id:"hyperlinklabel",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#hyperlinklabel","aria-hidden":"true"},"#",-1),f={href:"https://pyqt-fluent-widgets.readthedocs.io/zh-cn/latest/autoapi/qfluentwidgets/components/widgets/label/index.html#qfluentwidgets.components.widgets.label.HyperlinkLabel",target:"_blank",rel:"noopener noreferrer"},y=t('<p><img src="'+o+`" alt="HyperlinkLabel"></p><p><code>HyperlinkLabel</code> 可在点击时自动跳转到指定链接。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>label <span class="token operator">=</span> HyperlinkLabel<span class="token punctuation">(</span>QUrl<span class="token punctuation">(</span><span class="token string">&#39;https://github.com/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;GitHub&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 显示下划线</span>
hyperlinkLabel<span class="token punctuation">.</span>setUnderlineVisible<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token comment"># 更换超链接</span>
label<span class="token punctuation">.</span>setUrl<span class="token punctuation">(</span><span class="token string">&#39;https://github.com/zhiyiYo/QMaterialWidgets&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>label<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),L={id:"imagelabel",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#imagelabel","aria-hidden":"true"},"#",-1),x={href:"https://pyqt-fluent-widgets.readthedocs.io/zh-cn/latest/autoapi/qfluentwidgets/components/widgets/label/index.html#qfluentwidgets.components.widgets.label.ImageLabel",target:"_blank",rel:"noopener noreferrer"},q=t('<p><img src="'+p+`" alt="ImageLabel"></p><p><code>ImageLabel</code> 用于显示图片或者 GIF，在高分屏下也能清晰显示图片而不出现锯齿。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>image <span class="token operator">=</span> ImageLabel<span class="token punctuation">(</span><span class="token string">&quot;/path/to/image.png&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 按比例缩放到指定高度</span>
image<span class="token punctuation">.</span>scaledToHeight<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span>

<span class="token comment"># 圆角</span>
image<span class="token punctuation">.</span>setBorderRadius<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),B={id:"avatarwidget",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#avatarwidget","aria-hidden":"true"},"#",-1),H={href:"https://pyqt-fluent-widgets.readthedocs.io/zh-cn/latest/autoapi/qfluentwidgets/components/widgets/label/index.html#qfluentwidgets.components.widgets.label.AvatarWidget",target:"_blank",rel:"noopener noreferrer"},F=t('<p><img src="'+i+`" alt="AvatarWidget"></p><p><code>AvatarWidget</code> 用于显示圆形头像，可以是静态图片或者 GIF。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>w <span class="token operator">=</span> AvatarWidget<span class="token punctuation">(</span><span class="token string">&quot;/path/to/image.png&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 设置头像半径</span>
w<span class="token punctuation">.</span>setRadius<span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function T(W,z){const s=u("ExternalLinkIcon");return d(),r("div",null,[n("h3",m,[k,a(),n("a",h,[a("FluentLabelBase"),e(s)])]),g,n("h3",v,[_,a(),n("a",f,[a("HyperlinkLabel"),e(s)])]),y,n("h3",L,[w,a(),n("a",x,[a("ImageLabel"),e(s)])]),q,n("h3",B,[I,a(),n("a",H,[a("AvatarWidget"),e(s)])]),F])}const V=c(b,[["render",T],["__file","index.html.vue"]]);export{V as default};
