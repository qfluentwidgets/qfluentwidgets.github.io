import{_ as t,a as p,b as c,c as i,d as l}from"./FontComboBox-90e418cf.js";import{_ as u,r as d,o as r,c as m,b as n,d as s,a as e,e as o}from"./app-cad4e71c.js";const b={},k={id:"combobox",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#combobox","aria-hidden":"true"},"#",-1),h={href:"https://pyqt-fluent-widgets.readthedocs.io/en/latest/autoapi/qfluentwidgets/components/widgets/combo_box/index.html#qfluentwidgets.components.widgets.combo_box.ComboBox",target:"_blank",rel:"noopener noreferrer"},_=o('<p><img src="'+i+`" alt="Combo box"></p><p>当选项过多时，使用下拉框展示并选择内容。<code>ComboBox</code> 继承自 <code>PushButton</code>，重新实现了 <code>QComboBox</code> 的大部分接口，但是无法在 Designer 中添加选项。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>comboBox <span class="token operator">=</span> ComboBox<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 添加选项</span>
items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;shoko&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;西宫硝子&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;宝多六花&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;小鸟游六花&#39;</span><span class="token punctuation">]</span>
comboBox<span class="token punctuation">.</span>addItems<span class="token punctuation">(</span>items<span class="token punctuation">)</span>

<span class="token comment"># 当前选项的索引改变信号</span>
comboBox<span class="token punctuation">.</span>currentIndexChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span> index<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>comboBox<span class="token punctuation">.</span>currentText<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个选项都可以绑定数据：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>comboBox<span class="token punctuation">.</span>addItem<span class="token punctuation">(</span><span class="token string">&#39;leetcode&#39;</span><span class="token punctuation">,</span> userData<span class="token operator">=</span><span class="token string">&quot;剑指 Offer&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># &quot;leetcode&quot; 对应的索引为 4，返回值为 &quot;剑指 Offer&quot;</span>
comboBox<span class="token punctuation">.</span>itemData<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加选项之后默认选中第一个选项，如需取消选中：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 设置提示文本</span>
comboBox<span class="token punctuation">.</span>setPlaceholderText<span class="token punctuation">(</span><span class="token string">&quot;选择一个脑婆&quot;</span><span class="token punctuation">)</span>

<span class="token comment"># 取消选中</span>
comboBox<span class="token punctuation">.</span>setCurrentIndex<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),x={id:"editablecombobox",tabindex:"-1"},g=n("a",{class:"header-anchor",href:"#editablecombobox","aria-hidden":"true"},"#",-1),f={href:"https://pyqt-fluent-widgets.readthedocs.io/en/latest/autoapi/qfluentwidgets/components/widgets/combo_box/index.html#qfluentwidgets.components.widgets.combo_box.EditableComboBox",target:"_blank",rel:"noopener noreferrer"},B=o('<p><img src="'+l+`" alt="Editable combo box"></p><p><code>EditableComboBox</code> 允许用户编辑当前选项，按下回车可添加新选项。这个类继承自 <code>LineEdit</code>，同样不能在 Designer 中添加选项。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>comboBox <span class="token operator">=</span> EditableComboBox<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 添加选项</span>
items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;shoko&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;西宫硝子&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;宝多六花&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;小鸟游六花&#39;</span><span class="token punctuation">]</span>
comboBox<span class="token punctuation">.</span>addItems<span class="token punctuation">(</span>items<span class="token punctuation">)</span>

<span class="token comment"># 当前选项的索引改变信号</span>
comboBox<span class="token punctuation">.</span>currentIndexChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span> index<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>comboBox<span class="token punctuation">.</span>currentText<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置补全提示：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 创建补全器</span>
items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;shoko&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;西宫硝子&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;宝多六花&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;小鸟游六花&#39;</span><span class="token punctuation">]</span>
completer <span class="token operator">=</span> QCompleter<span class="token punctuation">(</span>items<span class="token punctuation">,</span> comboBox<span class="token punctuation">)</span>

<span class="token comment"># 设置显示的选项数</span>
completer<span class="token punctuation">.</span>setMaxVisibleItems<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

<span class="token comment"># 设置补全器</span>
comboBox<span class="token punctuation">.</span>setCompleter<span class="token punctuation">(</span>completer<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),C={id:"multiselectioncombobox",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#multiselectioncombobox","aria-hidden":"true"},"#",-1),q={href:"https://qfluentwidgets.com/zh/price",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,[n("img",{src:t,alt:"MultiSelectionComboBox"})],-1),E=n("p",null,[n("code",null,"MultiSelectionComboBox"),s(" 用于同时选择多个选项，并以标签的形式展示在下拉框中。")],-1),I={id:"transparentcombobox",tabindex:"-1"},T=n("a",{class:"header-anchor",href:"#transparentcombobox","aria-hidden":"true"},"#",-1),V={href:"https://qfluentwidgets.com/zh/price",target:"_blank",rel:"noopener noreferrer"},D=n("p",null,[n("img",{src:p,alt:"TransparentComboBox"})],-1),M=n("p",null,[n("code",null,"TransparentComboBox"),s(" 是透明背景的下拉框，可以自定义当前选项的颜色。")],-1),N={id:"fontcombobox",tabindex:"-1"},S=n("a",{class:"header-anchor",href:"#fontcombobox","aria-hidden":"true"},"#",-1),z={href:"https://qfluentwidgets.com/zh/price",target:"_blank",rel:"noopener noreferrer"},F=n("p",null,[n("img",{src:c,alt:"FontComboBox"})],-1),L=n("p",null,[n("code",null,"FontComboBox"),s(" 列出了系统所有可用字体供用户选择。")],-1);function O(P,Q){const a=d("ExternalLinkIcon");return r(),m("div",null,[n("h2",k,[v,s(),n("a",h,[s("ComboBox"),e(a)])]),_,n("h2",x,[g,s(),n("a",f,[s("EditableComboBox"),e(a)])]),B,n("h2",C,[y,s(),n("a",q,[s("MultiSelectionComboBox"),e(a)])]),w,E,n("h2",I,[T,s(),n("a",V,[s("TransparentComboBox"),e(a)])]),D,M,n("h2",N,[S,s(),n("a",z,[s("FontComboBox"),e(a)])]),F,L])}const G=u(b,[["render",O],["__file","index.html.vue"]]);export{G as default};
