import{_ as p,r as o,o as c,c as i,b as n,d as s,a as t,e}from"./app-6d437e8a.js";const l={},u=n("h2",{id:"侧边导航栏",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#侧边导航栏","aria-hidden":"true"},"#"),s(" 侧边导航栏")],-1),d=n("h3",{id:"结构",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#结构","aria-hidden":"true"},"#"),s(" 结构")],-1),r=n("code",null,"NavigationInterface",-1),k=n("code",null,"QStackWidget",-1),v=n("code",null,"QHBoxLayout",-1),m={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples/navigation2",target:"_blank",rel:"noopener noreferrer"},b=e(`<p><img src="https://cdn.staticaly.com/gh/qfluentwidgets/picx-images-hosting@master/20230824/Structure.3c6pzmvz8fc0.webp" alt="Structure"></p><p><code>NavigationInterface</code> 内部使用 <code>NavigationPanel</code> 来放置导航菜单项。所有导航菜单项都需要继承自 <code>NavigationWidget</code>，可以调用 <code>NavigationInterface.addWidget()</code> 或者 <code>NavigationPanel.addWidget()</code> 将导航项添加到导航界面中。</p><p>QFluentWidgets 实现了子类 <code>NavigationTreeWidget</code> ，同时提供了一个便捷的方法 <code>NavigationInterface.addItem()</code> 来创建多级菜单项并将其到导航界面上。</p><p>如果希望自定义一个导航项，可以创建 <code>NavigationWidget</code> 的子类并实现它的 <code>paintEvent()</code> 和 <code>setCompacted()</code>（可选） 方法。下面是一个简单例子，展示了如何定义头像导航项：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> NavigationWidget


<span class="token keyword">class</span> <span class="token class-name">AvatarWidget</span><span class="token punctuation">(</span>NavigationWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; Avatar widget &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>isSelectable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> parent<span class="token operator">=</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>avatar <span class="token operator">=</span> QImage<span class="token punctuation">(</span><span class="token string">&#39;resource/shoko.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scaled<span class="token punctuation">(</span>
            <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>KeepAspectRatio<span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>SmoothTransformation<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">paintEvent</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>
        painter <span class="token operator">=</span> QPainter<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>setRenderHints<span class="token punctuation">(</span>
            QPainter<span class="token punctuation">.</span>SmoothPixmapTransform <span class="token operator">|</span> QPainter<span class="token punctuation">.</span>Antialiasing<span class="token punctuation">)</span>

        painter<span class="token punctuation">.</span>setPen<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>NoPen<span class="token punctuation">)</span>

        <span class="token keyword">if</span> self<span class="token punctuation">.</span>isPressed<span class="token punctuation">:</span>
            painter<span class="token punctuation">.</span>setOpacity<span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">)</span>

        <span class="token comment"># draw background</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>isEnter<span class="token punctuation">:</span>
            c <span class="token operator">=</span> <span class="token number">255</span> <span class="token keyword">if</span> isDarkTheme<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token number">0</span>
            painter<span class="token punctuation">.</span>setBrush<span class="token punctuation">(</span>QColor<span class="token punctuation">(</span>c<span class="token punctuation">,</span> c<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            painter<span class="token punctuation">.</span>drawRoundedRect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>rect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>

        <span class="token comment"># draw avatar</span>
        painter<span class="token punctuation">.</span>setBrush<span class="token punctuation">(</span>QBrush<span class="token punctuation">(</span>self<span class="token punctuation">.</span>avatar<span class="token punctuation">)</span><span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>drawEllipse<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>isCompacted<span class="token punctuation">:</span>
            painter<span class="token punctuation">.</span>setPen<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>white <span class="token keyword">if</span> isDarkTheme<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> Qt<span class="token punctuation">.</span>black<span class="token punctuation">)</span>
            font <span class="token operator">=</span> QFont<span class="token punctuation">(</span><span class="token string">&#39;Segoe UI&#39;</span><span class="token punctuation">)</span>
            font<span class="token punctuation">.</span>setPixelSize<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
            painter<span class="token punctuation">.</span>setFont<span class="token punctuation">(</span>font<span class="token punctuation">)</span>
            painter<span class="token punctuation">.</span>drawText<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>AlignVCenter<span class="token punctuation">,</span> <span class="token string">&#39;zhiyiYo&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在让我们看看 <code>addWidget()</code> 方法的各个参数：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">addWidget</span><span class="token punctuation">(</span>
    self<span class="token punctuation">,</span>
    routeKey<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    widget<span class="token punctuation">:</span> NavigationWidget<span class="token punctuation">,</span>
    onClick<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    position<span class="token operator">=</span>NavigationItemPosition<span class="token punctuation">.</span>TOP<span class="token punctuation">,</span>
    tooltip<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    parentRouteKey<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，这个方法需要四个参数：</p><ul><li><code>routeKey</code>：路由键，被添加到导航界面上的 <code>widget</code> 的唯一标识。如果将 <code>QStackWidget</code> 里面的子界面视为网页，<code>routeKey</code> 就是这个子界面的 URL。当用户切换子界面时，<code>NavigationPanel</code> 会将一个路由键添加到导航历史中。导航界面上的后退按钮被点击时，位于导航历史栈顶的路由键会被弹出，如果此时导航历史不为空，就可以切换到栈顶的路由键对应的子界面，否则就切换到 <code>defaultRouteKey</code> 对应的子界面，因此在运行 app 之前需要调用 <code>NavigationInterface.setDefaultRouteKey()</code> 设置一下默认子界面。</li><li><code>widget</code>：被添加到导航界面上的导航项。</li><li><code>onClick</code>：点击导航项时触发的槽函数。如果想在点击导航项时切换子界面，一种推荐的写法是将槽函数写作：<code>lambda: self.stackWidget.setCurrentWidget(self.xxxInterface)</code>。</li><li><code>position</code>：导航项的位置。可以是下述值中的一种： <ul><li><code>NavigationItemPosition.TOP</code>：添加到导航面板的顶部</li><li><code>NavigationItemPosition.SCROLL</code>：添加到导航面板的滚动区域。当导航菜单项太多时，滚动区域中导航项可以被滚动</li><li><code>NavigationItemPosition.BOTTOM</code>: 添加到导航面板的底部</li></ul></li><li><code>tooltip</code>：菜单项的工具提示</li><li><code>parentRouteKey</code>: 父菜单项的路由键，父菜单项对应的小部件必须是 <code>NavigationTreeWidgetBase</code> 子类的实例</li></ul><h3 id="显示模式" tabindex="-1"><a class="header-anchor" href="#显示模式" aria-hidden="true">#</a> 显示模式</h3><p>导航面板有以下四种显示模式：</p>`,11),g=n("li",null,[n("code",null,"NavigationDisplayMode.EXPAND"),s("：左侧面板完全展开（当窗口的宽度大于等于 1008px 时可用）")],-1),f=n("li",null,[n("code",null,"NavigationDisplayMode.COMPACT"),s("：只在导航面板上显示图标，所有导航项都处于折叠状态（当窗口宽度小于 1007px 时默认使用这种显示模式）。")],-1),h=n("li",null,[n("code",null,"NavigationDisplayMode.MENU"),s("：展开的导航菜单（当窗口窗口小于 1007px 并点击菜单按钮时使用此显示模式）")],-1),_=n("code",null,"NavigationDisplayMode.MINIMAL",-1),w=n("code",null,"NavigationPanel",-1),y=n("code",null,"NavigationPanel.toggle()",-1),I={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples/navigation3",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,[s("如果调用了 "),n("code",null,"NavigationInterface.setExpandWidth()"),s("，上述的窗口宽度阈值（1008px）将相应进行调整。")],-1),N=n("h3",{id:"更多示例",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#更多示例","aria-hidden":"true"},"#"),s(" 更多示例")],-1),W={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples/navigation",target:"_blank",rel:"noopener noreferrer"},F=n("p",null,[n("img",{src:"https://cdn.staticaly.com/gh/qfluentwidgets/picx-images-hosting@master/20230824/NavigationInterface.3tihov4epdi0.webp",alt:""})],-1),Q={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples/navigation3",target:"_blank",rel:"noopener noreferrer"},P=n("img",{src:"https://cdn.staticaly.com/gh/qfluentwidgets/picx-images-hosting@master/20230824/Minimal.dpm79rl6e7k.webp",alt:""},null,-1),S=e(`<h2 id="fluentwindow" tabindex="-1"><a class="header-anchor" href="#fluentwindow" aria-hidden="true">#</a> FluentWindow</h2><p>QFluentWidgets 对侧边导航栏进行了封装，提供了开箱即用的 <code>FluentWindow</code>、<code>SplitFluentWindow</code> 和 <code>MSFluentWindow</code> 类。三个类的使用方式相似，以 <code>FluentWindow</code> 为例，只需调用 <code>addSubInterface()</code> 方法就能完成添加子界面的任务：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">addSubInterface</span><span class="token punctuation">(</span>
    self<span class="token punctuation">,</span>
    interface<span class="token punctuation">:</span> QWidget<span class="token punctuation">,</span>
    icon<span class="token punctuation">:</span> FluentIconBase <span class="token operator">|</span> QIcon <span class="token operator">|</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    position<span class="token operator">=</span>NavigationItemPosition<span class="token punctuation">.</span>TOP<span class="token punctuation">,</span>
    parent<span class="token punctuation">:</span> QWidget <span class="token operator">=</span> <span class="token boolean">None</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> NavigationTreeWidget
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>各个参数解释如下：</p><ul><li><code>interface</code>: 需要添加的子界面</li><li><code>icon</code>：侧边栏菜单项图标</li><li><code>text</code>：侧边栏菜单项文本</li><li><code>position</code>：侧边栏菜单项的位置</li><li><code>parent</code>：侧边栏父菜单项对应的子界面</li></ul>`,5),M=n("div",{class:"custom-container warning"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8v4"}),n("path",{d:"M12 16h.01"})])]),n("p",{class:"custom-container-title"},"警告"),n("p",null,[s("调用 "),n("code",null,"addSubInterface()"),s(" 之前必须给子界面设置全局唯一的对象名作为路由键，否则后退功能会出问题，同时侧边栏看不到子界面对应的菜单项")])],-1),q={href:"https://www.bilibili.com/video/BV1Uu411j7AV",target:"_blank",rel:"noopener noreferrer"},T=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> NavigationItemPosition<span class="token punctuation">,</span> FluentWindow<span class="token punctuation">,</span> SubtitleLabel<span class="token punctuation">,</span> setFont
<span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> FluentIcon <span class="token keyword">as</span> FIF


<span class="token keyword">class</span> <span class="token class-name">Widget</span><span class="token punctuation">(</span>QFrame<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token operator">=</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label <span class="token operator">=</span> SubtitleLabel<span class="token punctuation">(</span>text<span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>hBoxLayout <span class="token operator">=</span> QHBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>

        setFont<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setAlignment<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>hBoxLayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">)</span>

        <span class="token comment"># 必须给子界面设置全局唯一的对象名</span>
        self<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span>text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">Window</span><span class="token punctuation">(</span>FluentWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; 主界面 &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># 创建子界面，实际使用时将 Widget 换成自己的子界面</span>
        self<span class="token punctuation">.</span>homeInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Home Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>musicInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Music Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>videoInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Video Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>settingInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Setting Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>albumInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Album Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>albumInterface1 <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Album Interface 1&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>initNavigation<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>initWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">initNavigation</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>HOME<span class="token punctuation">,</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>musicInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>MUSIC<span class="token punctuation">,</span> <span class="token string">&#39;Music library&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>videoInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>VIDEO<span class="token punctuation">,</span> <span class="token string">&#39;Video library&#39;</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>navigationInterface<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>albumInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>ALBUM<span class="token punctuation">,</span> <span class="token string">&#39;Albums&#39;</span><span class="token punctuation">,</span> NavigationItemPosition<span class="token punctuation">.</span>SCROLL<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>albumInterface1<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>ALBUM<span class="token punctuation">,</span> <span class="token string">&#39;Album 1&#39;</span><span class="token punctuation">,</span> parent<span class="token operator">=</span>self<span class="token punctuation">.</span>albumInterface<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>settingInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>SETTING<span class="token punctuation">,</span> <span class="token string">&#39;Settings&#39;</span><span class="token punctuation">,</span> NavigationItemPosition<span class="token punctuation">.</span>BOTTOM<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">initWindow</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">900</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowIcon<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&#39;:/qfluentwidgets/images/logo.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&#39;PyQt-Fluent-Widgets&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    w <span class="token operator">=</span> Window<span class="token punctuation">(</span><span class="token punctuation">)</span>
    w<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A=n("div",{class:"custom-container tip"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"提示"),n("p",null,[s("如果你在界面的左上角看到奇怪的东西，说明忘了调用 "),n("code",null,"addSubInterface()"),s(" 添加某个子界面")])],-1);function B(C,L){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,d,n("p",null,[s("QFluentWidgets 提供侧边导航类 "),r,s("，可以将它和 "),k,s(" 放在 "),v,s(" 中，实现多子界面跳转，示例程序参见 "),n("a",m,[s("navigation2"),t(a)]),s("。")]),b,n("ul",null,[g,f,h,n("li",null,[_,s("：只显示一个菜单按钮。在这种显示模式下，应该自己创建并管理菜单按钮和 "),w,s("，然后将菜单按钮的点击信号连接到 "),y,s(" 函数上，具体写法可以参见 "),n("a",I,[s("navigation3"),t(a)]),s("。")])]),x,N,n("p",null,[s("下面是另外一种风格的导航界面，对应的示例程序为 "),n("a",W,[s("navigation"),t(a)]),s("。")]),F,n("p",null,[s("迷你导航界面如下图所示，可以在 "),n("a",Q,[s("navigation3"),t(a)]),s(" 获取完整代码。 "),P]),S,M,n("p",null,[s("下面是个简单的例子，更加复杂的多子界面示例见 "),n("a",q,[s("视频教程"),t(a)]),s("：")]),T,A])}const E=p(l,[["render",B],["__file","index.html.vue"]]);export{E as default};
