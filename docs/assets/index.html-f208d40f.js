import{_ as s,r as e,o,c as i,b as t,d as n,a as c,e as l}from"./app-afb9b4f3.js";const p={},d=l(`<p>QFluentWidgets presents each configuration item as a <code>SettingCard</code> on the interface. The behavior of user on the <code>SettingCard</code> will change the value of the configuration item, and QFluentWidgets will update the configuration item to the json configuration file automatically.</p><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h2><p>QFluentWidgets uses the <code>ConfigItem</code> class to represent a configuration item and uses the <code>QConfig</code> class to read and write the value of <code>ConfigItem</code>. The <code>QConfig</code> class will automatically update the configuration file when the value of the <code>ConfigItem</code> changes.</p><p>Since the value in config file may be manually modified by the user to an invalid value, QFluentWidgets use <code>ConfigValidator</code> and its subclass to verify and correct the config value.</p><p>Json files only support string, boolean value, list and dict, for enumeration classes or <code>QColor</code>, we can’t use <code>json.dump()</code> to write them directly into a json file, so QFluentWidgets provides <code>ConfigSerializer</code> and its subclass to serialize and deserialize config item from config file. For example, you can use <code>ColorSerializer</code> to serialize config items with <code>QColor</code> value type.</p><p><code>ConfigItem</code> has the following attributes:</p><table><thead><tr><th>属性</th><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td><code>group</code></td><td><code>str</code></td><td>配置项所属的组别</td></tr><tr><td><code>name</code></td><td><code>str</code></td><td>配置项的名字</td></tr><tr><td><code>default</code></td><td><code>Any</code></td><td>配置项的默认值，当配置值非法时将被默认值替代</td></tr><tr><td><code>validator</code></td><td><code>ConfigValidator</code></td><td>配置校验器</td></tr><tr><td><code>serializer</code></td><td><code>ConfigSerializer</code></td><td>配置序列化器</td></tr><tr><td><code>restart</code></td><td><code>bool</code></td><td>配置更新后是否重启应用</td></tr></tbody></table><p>You should add config items to the class attribute of <code>QConfig</code> subclasss, then use <code>qconfig.load()</code> to load config file, for example:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MvQuality</span><span class="token punctuation">(</span>Enum<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; MV quality enumeration class &quot;&quot;&quot;</span>

    FULL_HD <span class="token operator">=</span> <span class="token string">&quot;Full HD&quot;</span>
    HD <span class="token operator">=</span> <span class="token string">&quot;HD&quot;</span>
    SD <span class="token operator">=</span> <span class="token string">&quot;SD&quot;</span>
    LD <span class="token operator">=</span> <span class="token string">&quot;LD&quot;</span>

    <span class="token decorator annotation punctuation">@staticmethod</span>
    <span class="token keyword">def</span> <span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">[</span>q<span class="token punctuation">.</span>value <span class="token keyword">for</span> q <span class="token keyword">in</span> MvQuality<span class="token punctuation">]</span>


<span class="token keyword">class</span> <span class="token class-name">Config</span><span class="token punctuation">(</span>QConfig<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; Config of application &quot;&quot;&quot;</span>

    <span class="token comment"># main window</span>
    enableAcrylic <span class="token operator">=</span> ConfigItem<span class="token punctuation">(</span><span class="token string">&quot;MainWindow&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;EnableAcrylic&quot;</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">,</span> BoolValidator<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    playBarColor <span class="token operator">=</span> ColorConfigItem<span class="token punctuation">(</span><span class="token string">&quot;MainWindow&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PlayBarColor&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#225C7F&quot;</span><span class="token punctuation">)</span>
    themeMode <span class="token operator">=</span> OptionsConfigItem<span class="token punctuation">(</span><span class="token string">&quot;MainWindow&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ThemeMode&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Light&quot;</span><span class="token punctuation">,</span> OptionsValidator<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;Light&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Dark&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Auto&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> restart<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    recentPlaysNumber <span class="token operator">=</span> RangeConfigItem<span class="token punctuation">(</span><span class="token string">&quot;MainWindow&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;RecentPlayNumbers&quot;</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> RangeValidator<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment"># online</span>
    onlineMvQuality <span class="token operator">=</span> OptionsConfigItem<span class="token punctuation">(</span><span class="token string">&quot;Online&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;MvQuality&quot;</span><span class="token punctuation">,</span> MvQuality<span class="token punctuation">.</span>FULL_HD<span class="token punctuation">,</span> OptionsValidator<span class="token punctuation">(</span>MvQuality<span class="token punctuation">)</span><span class="token punctuation">,</span> EnumSerializer<span class="token punctuation">(</span>MvQuality<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token comment"># create config object and initialize it</span>
cfg <span class="token operator">=</span> Config<span class="token punctuation">(</span><span class="token punctuation">)</span>
qconfig<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">&#39;config/config.json&#39;</span><span class="token punctuation">,</span> cfg<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="setting-card" tabindex="-1"><a class="header-anchor" href="#setting-card" aria-hidden="true">#</a> Setting card</h2><p>QFluentWidgets provides many kinds of setting card:</p><table><thead><tr><th>Class</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td><code>HyperlinkCard</code></td><td style="text-align:left;">Setting card with a hyper link</td></tr><tr><td><code>ColorSettingCard</code></td><td style="text-align:left;">Setting card with a color picker</td></tr><tr><td><code>CustomColorSettingCard</code></td><td style="text-align:left;">Setting card with a button to choose color</td></tr><tr><td><code>ComboBoxSettingCard</code></td><td style="text-align:left;">Setting card with a combo box</td></tr><tr><td><code>RangeSettingCard</code></td><td style="text-align:left;">Setting card with a slider</td></tr><tr><td><code>PushSettingCard</code></td><td style="text-align:left;">Setting card with a naive push button</td></tr><tr><td><code>PrimaryPushSettingCard</code></td><td style="text-align:left;">Setting card with a primary color push button</td></tr><tr><td><code>SwitchSettingCard</code></td><td style="text-align:left;">Setting card with a switch button</td></tr><tr><td><code>OptionsSettingCard</code></td><td style="text-align:left;">Setting card with a group of radio buttons</td></tr><tr><td><code>FolderListSettingCard</code></td><td style="text-align:left;">Setting card for showing and managing folder list</td></tr></tbody></table><p>You can use <code>SettingCardGroup.addSettingCard()</code> to add a setting card to the same group, and <code>SettingCardGroup</code> will adjust its layout automatically based on the height of setting cards.</p>`,13),u={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/blob/master/examples/settings/setting_interface.py",target:"_blank",rel:"noopener noreferrer"};function r(g,k){const a=e("ExternalLinkIcon");return o(),i("div",null,[d,t("p",null,[n("For the usage of these components, see "),t("a",u,[n("settings_interface.py"),c(a)]),n(".")])])}const f=s(p,[["render",r],["__file","index.html.vue"]]);export{f as default};
