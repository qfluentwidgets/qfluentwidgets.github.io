import{_ as p,a as o,b as i}from"./MSFluentWindow-d48f08f0.js";import{_ as c,r as l,o as u,c as d,b as n,d as s,a as t,e}from"./app-cad4e71c.js";const r={},k={id:"fluentwindow",tabindex:"-1"},v=n("a",{class:"header-anchor",href:"#fluentwindow","aria-hidden":"true"},"#",-1),m={href:"https://pyqt-fluent-widgets.readthedocs.io/en/latest/autoapi/qfluentwidgets/window/fluent_window/index.html#",target:"_blank",rel:"noopener noreferrer"},b=e('<p><img src="'+o+`" alt="FluentWindow"></p><p><code>FluentWindow</code> encapsulates the sidebar and stackable components, making it very convenient to create multi-interface windows.</p><h3 id="add-sub-interface" tabindex="-1"><a class="header-anchor" href="#add-sub-interface" aria-hidden="true">#</a> Add sub-interface</h3><p>Just call the <code>addSubInterface()</code> method to add a sub-interface:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">addSubInterface</span><span class="token punctuation">(</span>
    self<span class="token punctuation">,</span>
    interface<span class="token punctuation">:</span> QWidget<span class="token punctuation">,</span>
    icon<span class="token punctuation">:</span> FluentIconBase <span class="token operator">|</span> QIcon <span class="token operator">|</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    position<span class="token operator">=</span>NavigationItemPosition<span class="token punctuation">.</span>TOP<span class="token punctuation">,</span>
    parent<span class="token punctuation">:</span> QWidget <span class="token operator">=</span> <span class="token boolean">None</span>
<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> NavigationTreeWidget
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Each parameter is explained as follows:</p><ul><li><code>interface</code>: The sub-interface to be added</li><li><code>icon</code>: Sidebar menu item icon</li><li><code>text</code>: Sidebar menu item text</li><li><code>position</code>: Position of the sidebar menu item</li><li><code>parent</code>: The sub-interface corresponding to the sidebar parent menu item</li></ul>`,7),f=n("div",{class:"custom-container warning"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8v4"}),n("path",{d:"M12 16h.01"})])]),n("p",{class:"custom-container-title"},"Warning"),n("p",null,[s("Before calling "),n("code",null,"addSubInterface()"),s(", you must set a globally unique object name for the sub-interface as the routing key, otherwise the back function will have problems, and the sidebar will not see the menu item corresponding to the sub-interface. If you see something strange in the upper left corner of the interface, it means you forgot to call "),n("code",null,"addSubInterface()"),s(" to add a certain sub-interface")])],-1),g={href:"https://www.bilibili.com/video/BV1Uu411j7AV",target:"_blank",rel:"noopener noreferrer"},h=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> NavigationItemPosition<span class="token punctuation">,</span> FluentWindow<span class="token punctuation">,</span> SubtitleLabel<span class="token punctuation">,</span> setFont
<span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> FluentIcon <span class="token keyword">as</span> FIF


<span class="token keyword">class</span> <span class="token class-name">Widget</span><span class="token punctuation">(</span>QFrame<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token operator">=</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label <span class="token operator">=</span> SubtitleLabel<span class="token punctuation">(</span>text<span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>hBoxLayout <span class="token operator">=</span> QHBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>

        setFont<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setAlignment<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>hBoxLayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">)</span>

        <span class="token comment"># Must set a globally unique object name for the sub-interface</span>
        self<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span>text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">Window</span><span class="token punctuation">(</span>FluentWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; Main Interface &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># Create sub-interfaces, when actually using, replace Widget with your own sub-interface</span>
        self<span class="token punctuation">.</span>homeInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Home Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>musicInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Music Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>videoInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Video Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>settingInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Setting Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>albumInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Album Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>albumInterface1 <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Album Interface 1&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>initNavigation<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>initWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">initNavigation</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>HOME<span class="token punctuation">,</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>musicInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>MUSIC<span class="token punctuation">,</span> <span class="token string">&#39;Music library&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>videoInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>VIDEO<span class="token punctuation">,</span> <span class="token string">&#39;Video library&#39;</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>navigationInterface<span class="token punctuation">.</span>addSeparator<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>albumInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>ALBUM<span class="token punctuation">,</span> <span class="token string">&#39;Albums&#39;</span><span class="token punctuation">,</span> NavigationItemPosition<span class="token punctuation">.</span>SCROLL<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>albumInterface1<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>ALBUM<span class="token punctuation">,</span> <span class="token string">&#39;Album 1&#39;</span><span class="token punctuation">,</span> parent<span class="token operator">=</span>self<span class="token punctuation">.</span>albumInterface<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>settingInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>SETTING<span class="token punctuation">,</span> <span class="token string">&#39;Settings&#39;</span><span class="token punctuation">,</span> NavigationItemPosition<span class="token punctuation">.</span>BOTTOM<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">initWindow</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">900</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowIcon<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&#39;:/qfluentwidgets/images/logo.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&#39;PyQt-Fluent-Widgets&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    w <span class="token operator">=</span> Window<span class="token punctuation">(</span><span class="token punctuation">)</span>
    w<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="switching-interface" tabindex="-1"><a class="header-anchor" href="#switching-interface" aria-hidden="true">#</a> Switching interface</h3><p><code>FluentWindow</code> provides a method for switching the current interface, where <code>interface</code> is the sub-interface to be switched to:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">switchTo</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> interface<span class="token punctuation">:</span> QWidget<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Internally, <code>FluentWindow</code> uses <code>StackedWidget</code> to hold sub-interfaces. When switching the current interface, <code>StackedWidget</code> will emit a <code>currentChanged(index: int)</code> signal:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>self<span class="token punctuation">.</span>stackedWidget<span class="token punctuation">.</span>currentChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>stackedWidget<span class="token punctuation">.</span>currentWidget<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="customize-navigation" tabindex="-1"><a class="header-anchor" href="#customize-navigation" aria-hidden="true">#</a> Customize navigation</h3><p>To adjust the width of the sidebar navigation in the expanded state:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>self<span class="token punctuation">.</span>navigationInterface<span class="token punctuation">.</span>setExpandWidth<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>By default, the sidebar navigation is collapsed and will only expand when the window width exceeds the threshold. If you want to disable the collapse and always keep it expanded:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># This line of code must be called after setExpandWidth()</span>
self<span class="token punctuation">.</span>navigationInterface<span class="token punctuation">.</span>setCollapsible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>If you don&#39;t want to disable the collapse, but you want the sidebar to be expanded after the window is created:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">900</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span>

<span class="token comment"># Need to set the minimum window width that allows the sidebar navigation to expand</span>
self<span class="token punctuation">.</span>navigationInterface<span class="token punctuation">.</span>setMinimumExpandWidth<span class="token punctuation">(</span><span class="token number">900</span><span class="token punctuation">)</span>

<span class="token comment"># Expand the navigation bar</span>
self<span class="token punctuation">.</span>navigationInterface<span class="token punctuation">.</span>expand<span class="token punctuation">(</span>useAni<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="solution-to-background-failure" tabindex="-1"><a class="header-anchor" href="#solution-to-background-failure" aria-hidden="true">#</a> Solution to background failure</h3><p>In Win11 system, <code>FluentWindow</code> enables the mica effect by default. If <code>QWebEngineView</code> or <code>QOpenGLWidget</code> is used in the window, it will cause the window background effect to fail, and the rounded corners and shadows will also disappear.</p><p>The following example demonstrates how to correctly use the Web engine in <code>FluentWindow</code>:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> SplitFluentWindow<span class="token punctuation">,</span> FluentIcon
<span class="token keyword">from</span> qframelesswindow<span class="token punctuation">.</span>webengine <span class="token keyword">import</span> FramelessWebEngineView


<span class="token keyword">class</span> <span class="token class-name">Widget</span><span class="token punctuation">(</span>QFrame<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token operator">=</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span><span class="token string">&quot;homeInterface&quot;</span><span class="token punctuation">)</span>

        <span class="token comment"># 1. Replace QWebEngineView with FramelessWebEngineView</span>
        self<span class="token punctuation">.</span>webView <span class="token operator">=</span> FramelessWebEngineView<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>webView<span class="token punctuation">.</span>load<span class="token punctuation">(</span>QUrl<span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>vBoxLayout <span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>vBoxLayout<span class="token punctuation">.</span>setContentsMargins<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>vBoxLayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>webView<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">Window</span><span class="token punctuation">(</span>SplitFluentWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># Create and add sub-interfaces</span>
        self<span class="token punctuation">.</span>homeInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeInterface<span class="token punctuation">,</span> FluentIcon<span class="token punctuation">.</span>HOME<span class="token punctuation">,</span> <span class="token string">&quot;Home&quot;</span><span class="token punctuation">)</span>

        <span class="token comment"># Initialize the window</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">900</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowIcon<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&#39;:/qfluentwidgets/images/logo.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&#39;PyQt-Fluent-Widgets&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    w <span class="token operator">=</span> Window<span class="token punctuation">(</span><span class="token punctuation">)</span>
    w<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># 2. Re-enable the mica effect</span>
    w<span class="token punctuation">.</span>setMicaEffectEnabled<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For <code>QOpenGLWidget</code>, you need to forcibly call <code>FluentWindow.updateFrameless()</code> in the constructor of the main window and re-enable the mica effect after showing the main window.</p>`,18),w={id:"splitfluentwindow",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#splitfluentwindow","aria-hidden":"true"},"#",-1),y={href:"https://pyqt-fluent-widgets.readthedocs.io/en/latest/autoapi/qfluentwidgets/window/fluent_window/index.html#",target:"_blank",rel:"noopener noreferrer"},I=n("p",null,[n("img",{src:p,alt:"SplitFluentWindow"})],-1),x=n("p",null,[s("The usage of "),n("code",null,"SplitFluentWindow"),s(" is exactly the same as "),n("a",{href:"#fluentwindow"},"FluentWindow"),s(".")],-1),W={id:"msfluentwindow",tabindex:"-1"},F=n("a",{class:"header-anchor",href:"#msfluentwindow","aria-hidden":"true"},"#",-1),S={href:"https://pyqt-fluent-widgets.readthedocs.io/en/latest/autoapi/qfluentwidgets/window/fluent_window/index.html#",target:"_blank",rel:"noopener noreferrer"},Q=e('<p><img src="'+i+`" alt="MSFluentWindow"></p><p><code>MSFluentWindow</code> encapsulates <code>NavigationBar</code> and stackable components, making it very convenient to create multi-interface windows.</p><p>Just call the <code>addSubInterface()</code> method to add a sub-interface (you must first set the object name for the sub-interface before you can call this method):</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">addSubInterface</span><span class="token punctuation">(</span>
    self<span class="token punctuation">,</span>
    interface<span class="token punctuation">:</span> QWidget<span class="token punctuation">,</span>
    icon<span class="token punctuation">:</span> FluentIconBase <span class="token operator">|</span> QIcon <span class="token operator">|</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    selectedIcon<span class="token punctuation">:</span> FluentIconBase <span class="token operator">|</span> QIcon <span class="token operator">|</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    position<span class="token operator">=</span>NavigationItemPosition<span class="token punctuation">.</span>TOP<span class="token punctuation">,</span>
    isTransparent<span class="token operator">=</span><span class="token boolean">False</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Each parameter is explained as follows:</p><ul><li><code>interface</code>: The sub-interface to be added</li><li><code>icon</code>: Sidebar menu item icon</li><li><code>text</code>: Sidebar menu item text</li><li><code>selectedIcon</code>: Icon of the sidebar menu item in the selected state</li><li><code>position</code>: Position of the sidebar menu item</li><li><code>isTransparent</code>: Whether to use a transparent background</li></ul>`,6),q={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/blob/master/examples/view/card_widget/demo.py",target:"_blank",rel:"noopener noreferrer"},B=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> <span class="token punctuation">(</span>NavigationItemPosition<span class="token punctuation">,</span> MessageBox<span class="token punctuation">,</span> setTheme<span class="token punctuation">,</span> Theme<span class="token punctuation">,</span> MSFluentWindow<span class="token punctuation">,</span>
                            NavigationAvatarWidget<span class="token punctuation">,</span> qrouter<span class="token punctuation">,</span> SubtitleLabel<span class="token punctuation">,</span> setFont<span class="token punctuation">)</span>
<span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> FluentIcon <span class="token keyword">as</span> FIF


<span class="token keyword">class</span> <span class="token class-name">Widget</span><span class="token punctuation">(</span>QFrame<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token operator">=</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label <span class="token operator">=</span> SubtitleLabel<span class="token punctuation">(</span>text<span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>hBoxLayout <span class="token operator">=</span> QHBoxLayout<span class="token punctuation">(</span>self<span class="token punctuation">)</span>

        setFont<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>label<span class="token punctuation">.</span>setAlignment<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>hBoxLayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>label<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setObjectName<span class="token punctuation">(</span>text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>



<span class="token keyword">class</span> <span class="token class-name">Window</span><span class="token punctuation">(</span>MSFluentWindow<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># create sub interface</span>
        self<span class="token punctuation">.</span>homeInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Home Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>appInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Application Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>videoInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;Video Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>libraryInterface <span class="token operator">=</span> Widget<span class="token punctuation">(</span><span class="token string">&#39;library Interface&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>initNavigation<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>initWindow<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">initNavigation</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>HOME<span class="token punctuation">,</span> <span class="token string">&#39;Home&#39;</span><span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>HOME_FILL<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>appInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>APPLICATION<span class="token punctuation">,</span> <span class="token string">&#39;Application&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>videoInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>VIDEO<span class="token punctuation">,</span> <span class="token string">&#39;Video&#39;</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>addSubInterface<span class="token punctuation">(</span>self<span class="token punctuation">.</span>libraryInterface<span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>BOOK_SHELF<span class="token punctuation">,</span> <span class="token string">&#39;Library&#39;</span><span class="token punctuation">,</span> FIF<span class="token punctuation">.</span>LIBRARY_FILL<span class="token punctuation">,</span> NavigationItemPosition<span class="token punctuation">.</span>BOTTOM<span class="token punctuation">)</span>

        <span class="token comment"># Add custom navigation components</span>
        self<span class="token punctuation">.</span>navigationInterface<span class="token punctuation">.</span>addItem<span class="token punctuation">(</span>
            routeKey<span class="token operator">=</span><span class="token string">&#39;Help&#39;</span><span class="token punctuation">,</span>
            icon<span class="token operator">=</span>FIF<span class="token punctuation">.</span>HELP<span class="token punctuation">,</span>
            text<span class="token operator">=</span><span class="token string">&#39;Help&#39;</span><span class="token punctuation">,</span>
            onClick<span class="token operator">=</span>self<span class="token punctuation">.</span>showMessageBox<span class="token punctuation">,</span>
            selectable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
            position<span class="token operator">=</span>NavigationItemPosition<span class="token punctuation">.</span>BOTTOM<span class="token punctuation">,</span>
        <span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>navigationInterface<span class="token punctuation">.</span>setCurrentItem<span class="token punctuation">(</span>self<span class="token punctuation">.</span>homeInterface<span class="token punctuation">.</span>objectName<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">initWindow</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>resize<span class="token punctuation">(</span><span class="token number">900</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowIcon<span class="token punctuation">(</span>QIcon<span class="token punctuation">(</span><span class="token string">&#39;:/qfluentwidgets/images/logo.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>setWindowTitle<span class="token punctuation">(</span><span class="token string">&#39;PyQt-Fluent-Widgets&#39;</span><span class="token punctuation">)</span>

        desktop <span class="token operator">=</span> QApplication<span class="token punctuation">.</span>desktop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>availableGeometry<span class="token punctuation">(</span><span class="token punctuation">)</span>
        w<span class="token punctuation">,</span> h <span class="token operator">=</span> desktop<span class="token punctuation">.</span>width<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> desktop<span class="token punctuation">.</span>height<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>move<span class="token punctuation">(</span>w<span class="token operator">//</span><span class="token number">2</span> <span class="token operator">-</span> self<span class="token punctuation">.</span>width<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">,</span> h<span class="token operator">//</span><span class="token number">2</span> <span class="token operator">-</span> self<span class="token punctuation">.</span>height<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">showMessageBox</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        w <span class="token operator">=</span> MessageBox<span class="token punctuation">(</span>
            <span class="token string">&#39;Support the author🥰&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;Personal development is not easy, if this project has helped you, you can consider buying the author a happy water🥤. Your support is the motivation for the author to develop and maintain the project🚀&#39;</span><span class="token punctuation">,</span>
            self
        <span class="token punctuation">)</span>
        w<span class="token punctuation">.</span>yesButton<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&#39;Here you go, bro&#39;</span><span class="token punctuation">)</span>
        w<span class="token punctuation">.</span>cancelButton<span class="token punctuation">.</span>setText<span class="token punctuation">(</span><span class="token string">&#39;Next time for sure&#39;</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> w<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            QDesktopServices<span class="token punctuation">.</span>openUrl<span class="token punctuation">(</span>QUrl<span class="token punctuation">(</span><span class="token string">&quot;https://qfluentwidgets.com/price/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    app <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span>
    w <span class="token operator">=</span> Window<span class="token punctuation">(</span><span class="token punctuation">)</span>
    w<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function N(L,T){const a=l("ExternalLinkIcon");return u(),d("div",null,[n("h2",k,[v,s(),n("a",m,[s("FluentWindow"),t(a)])]),b,f,n("p",null,[s("Here is a simple example, for more complex multi-sub-interface examples see the "),n("a",g,[s("video tutorial"),t(a)]),s(":")]),h,n("h2",w,[_,s(),n("a",y,[s("SplitFluentWindow"),t(a)])]),I,x,n("h2",W,[F,s(),n("a",S,[s("MSFluentWindow"),t(a)])]),Q,n("p",null,[s("Here is a simple example, for more complex examples see "),n("a",q,[s("Card Example"),t(a)]),s(":")]),B])}const E=c(r,[["render",N],["__file","index.html.vue"]]);export{E as default};
