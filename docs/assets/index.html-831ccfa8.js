import{_ as e}from"./IconInterface-8ea410a6.js";import{_ as t,r as o,o as c,c as p,b as n,d as s,a as l,e as i}from"./app-814b3b6c.js";const u={},r=n("h2",{id:"built-in-icons",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#built-in-icons","aria-hidden":"true"},"#"),s(" Built-in icons")],-1),d=n("p",null,"Components in QFluentWidgets generally support the following three types of icon parameters:",-1),k=n("ul",null,[n("li",null,[n("code",null,"str"),s(": Icon path")]),n("li",null,[n("code",null,"QIcon"),s(": Qt icon")]),n("li",null,[n("code",null,"FluentIconBase"),s(": Fluent icon abstract class")])],-1),m=n("code",null,"FluentIcon",-1),v={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/releases/download/v1.1.6/PyQt-Fluent-Widgets-Gallery_v1.1.6_lite_windows_x64.zip",target:"_blank",rel:"noopener noreferrer"},h=i('<p><img src="'+e+`" alt="IconInterface"></p><h2 id="customize-icon" tabindex="-1"><a class="header-anchor" href="#customize-icon" aria-hidden="true">#</a> Customize icon</h2><h3 id="change-color" tabindex="-1"><a class="header-anchor" href="#change-color" aria-hidden="true">#</a> Change color</h3><p><code>FluentIconBase</code> provide the <code>icon()</code> method:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">icon</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> theme<span class="token operator">=</span>Theme<span class="token punctuation">.</span>AUTO<span class="token punctuation">,</span> color<span class="token punctuation">:</span> QColor <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> QIcon<span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>It will return <code>QIcon</code> instance according to the <code>theme</code> and <code>color</code>, the <code>color</code> parameter is available when the icon is svg format.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># use light theme icon</span>
button <span class="token operator">=</span> ToolButton<span class="token punctuation">(</span>FluentIcon<span class="token punctuation">.</span>ADD<span class="token punctuation">.</span>icon<span class="token punctuation">(</span>Theme<span class="token punctuation">.</span>LIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># use dark theme icon</span>
button <span class="token operator">=</span> ToolButton<span class="token punctuation">(</span>FluentIcon<span class="token punctuation">.</span>ADD<span class="token punctuation">.</span>icon<span class="token punctuation">(</span>Theme<span class="token punctuation">.</span>DARK<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># use color name</span>
button <span class="token operator">=</span> ToolButton<span class="token punctuation">(</span>FluentIcon<span class="token punctuation">.</span>ADD<span class="token punctuation">.</span>icon<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># use hex color string</span>
button <span class="token operator">=</span> ToolButton<span class="token punctuation">(</span>FluentIcon<span class="token punctuation">.</span>ADD<span class="token punctuation">.</span>icon<span class="token punctuation">(</span>color<span class="token operator">=</span><span class="token string">&#39;#ff0000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># use Qt.GlobalColor</span>
button <span class="token operator">=</span> ToolButton<span class="token punctuation">(</span>FluentIcon<span class="token punctuation">.</span>ADD<span class="token punctuation">.</span>icon<span class="token punctuation">(</span>color<span class="token operator">=</span>Qt<span class="token punctuation">.</span>red<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># use QColor</span>
button <span class="token operator">=</span> ToolButton<span class="token punctuation">(</span>FluentIcon<span class="token punctuation">.</span>ADD<span class="token punctuation">.</span>icon<span class="token punctuation">(</span>color<span class="token operator">=</span>QColor<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="add-icon" tabindex="-1"><a class="header-anchor" href="#add-icon" aria-hidden="true">#</a> Add icon</h3><p>If you want to automatically change icons when switching themes, you can inherit the <code>FluentIconBase</code> class and override the <code>path()</code> function to provide the path of the icons for different themes. Here is an example:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum

<span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> getIconColor<span class="token punctuation">,</span> Theme<span class="token punctuation">,</span> FluentIconBase


<span class="token keyword">class</span> <span class="token class-name">MyFluentIcon</span><span class="token punctuation">(</span>FluentIconBase<span class="token punctuation">,</span> Enum<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; Custom icons &quot;&quot;&quot;</span>

    ADD <span class="token operator">=</span> <span class="token string">&quot;Add&quot;</span>
    CUT <span class="token operator">=</span> <span class="token string">&quot;Cut&quot;</span>
    COPY <span class="token operator">=</span> <span class="token string">&quot;Copy&quot;</span>

    <span class="token keyword">def</span> <span class="token function">path</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> theme<span class="token operator">=</span>Theme<span class="token punctuation">.</span>AUTO<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment"># getIconColor() return &quot;white&quot; or &quot;black&quot; according to current theme</span>
        <span class="token keyword">return</span> <span class="token string-interpolation"><span class="token string">f&#39;:/icons/</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>value<span class="token punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token punctuation">{</span>getIconColor<span class="token punctuation">(</span>theme<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">.svg&#39;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then you can pass the member of <code>MyFluentIcon</code> to the component which needs iconï¼š</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> ToolButton<span class="token punctuation">,</span> toggleTheme

<span class="token comment"># create tool button</span>
button <span class="token operator">=</span> ToolButton<span class="token punctuation">(</span>MyFluentIcon<span class="token punctuation">.</span>ADD<span class="token punctuation">)</span>

<span class="token comment"># change icon</span>
button<span class="token punctuation">.</span>setIcon<span class="token punctuation">(</span>MyFluentIcon<span class="token punctuation">.</span>CUT<span class="token punctuation">)</span>

<span class="token comment"># toggle theme, and the icon will be changed</span>
button<span class="token punctuation">.</span>clicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>toggleTheme<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function b(g,f){const a=o("ExternalLinkIcon");return c(),p("div",null,[r,d,k,n("p",null,[s("The enumeration subclass "),m,s(" contains hundreds of vector icons that are ready to be used, you can check them in the icon interface of "),n("a",v,[s("gallery app"),l(a)]),s(".")]),h])}const I=t(u,[["render",b],["__file","index.html.vue"]]);export{I as default};
