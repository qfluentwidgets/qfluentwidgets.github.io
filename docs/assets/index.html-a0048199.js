import{_ as t,a as o,b as i}from"./Minimal-8df4afbf.js";import{_ as p,r as c,o as l,c as u,b as n,d as a,a as e,e as d}from"./app-cc992c34.js";const r="/img/navigation/Expand.jpg",k="/img/navigation/Compact.jpg",m="/img/navigation/Menu.jpg",v={},h=n("h2",{id:"structure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#structure","aria-hidden":"true"},"#"),a(" Structure")],-1),g=n("code",null,"NavigationInterface",-1),b=n("code",null,"QStackWidget",-1),f=n("code",null,"QHBoxLayout",-1),y={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples/navigation2",target:"_blank",rel:"noopener noreferrer"},w=d('<p><img src="'+i+`" alt=""></p><p><code>NavigationInterface</code> contains <code>NavigationPanel</code> which is used to place navigation menu items. All navigation menu items should inherit from <code>NavigationWidget</code> and you can add them to the panel by calling <code>NavigationInterface.addWidget()</code> or <code>NavigationPanel.addWidget()</code>. PyQt-Fluent-Widgets implements subclass <code>NavigationPushButton</code> and provides a convenient method <code>NavigationInterface.addItem()</code> to add it to the panel.</p><p>If you want to customize a navigation menu item, you should inherit the <code>NavigationWidget</code> and rewrite its <code>paintEvent()</code> and <code>setCompacted()</code>(optional). Here an example shows how to create an avatar item.</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> qfluentwidgets <span class="token keyword">import</span> NavigationWidget


<span class="token keyword">class</span> <span class="token class-name">AvatarWidget</span><span class="token punctuation">(</span>NavigationWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; Avatar widget &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>isSelectable<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> parent<span class="token operator">=</span>parent<span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>avatar <span class="token operator">=</span> QImage<span class="token punctuation">(</span><span class="token string">&#39;resource/shoko.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scaled<span class="token punctuation">(</span>
            <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>KeepAspectRatio<span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>SmoothTransformation<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">paintEvent</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>
        painter <span class="token operator">=</span> QPainter<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>setRenderHints<span class="token punctuation">(</span>
            QPainter<span class="token punctuation">.</span>SmoothPixmapTransform <span class="token operator">|</span> QPainter<span class="token punctuation">.</span>Antialiasing<span class="token punctuation">)</span>

        painter<span class="token punctuation">.</span>setPen<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>NoPen<span class="token punctuation">)</span>

        <span class="token keyword">if</span> self<span class="token punctuation">.</span>isPressed<span class="token punctuation">:</span>
            painter<span class="token punctuation">.</span>setOpacity<span class="token punctuation">(</span><span class="token number">0.7</span><span class="token punctuation">)</span>

        <span class="token comment"># draw background</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>isEnter<span class="token punctuation">:</span>
            c <span class="token operator">=</span> <span class="token number">255</span> <span class="token keyword">if</span> isDarkTheme<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token number">0</span>
            painter<span class="token punctuation">.</span>setBrush<span class="token punctuation">(</span>QColor<span class="token punctuation">(</span>c<span class="token punctuation">,</span> c<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            painter<span class="token punctuation">.</span>drawRoundedRect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>rect<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>

        <span class="token comment"># draw avatar</span>
        painter<span class="token punctuation">.</span>setBrush<span class="token punctuation">(</span>QBrush<span class="token punctuation">(</span>self<span class="token punctuation">.</span>avatar<span class="token punctuation">)</span><span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>drawEllipse<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">6</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>isCompacted<span class="token punctuation">:</span>
            painter<span class="token punctuation">.</span>setPen<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>white <span class="token keyword">if</span> isDarkTheme<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> Qt<span class="token punctuation">.</span>black<span class="token punctuation">)</span>
            font <span class="token operator">=</span> QFont<span class="token punctuation">(</span><span class="token string">&#39;Segoe UI&#39;</span><span class="token punctuation">)</span>
            font<span class="token punctuation">.</span>setPixelSize<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span>
            painter<span class="token punctuation">.</span>setFont<span class="token punctuation">(</span>font<span class="token punctuation">)</span>
            painter<span class="token punctuation">.</span>drawText<span class="token punctuation">(</span>QRect<span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>AlignVCenter<span class="token punctuation">,</span> <span class="token string">&#39;zhiyiYo&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now let&#39;s take a look at the parameters required for the <code>addWidget()</code> method:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">addWidget</span><span class="token punctuation">(</span>
    self<span class="token punctuation">,</span>
    routeKey<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>
    widget<span class="token punctuation">:</span> NavigationWidget<span class="token punctuation">,</span>
    onClick<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    position<span class="token operator">=</span>NavigationItemPosition<span class="token punctuation">.</span>TOP<span class="token punctuation">,</span>
    tooltip<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>
    parentRouteKey<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As you can see, this method requires four parameters:</p><ul><li><code>routeKey</code>: A unique name for the <code>widget</code> to be added. You can consider the sub interface in the <code>QStackWidget</code> as a web page, and the <code>routeKey</code> is the url of the web page. When you switch between sub interfaces, <code>NavigationPanel</code> will add a <code>routeKey</code> to the navigation history. When you click the return button, the <code>routeKey</code> at the top of the navigation history will pop up. If there are other <code>routeKeys</code> in the history at this time, PyQt-Fluent-Widgets will switch to the corresponding sub interface corresponding to current top <code>routeKey</code>. Otherwise, it will switch to the sub interface corresponding to <code>defaultRouteKey</code>, so you should call <code>NavigationInterface.setDefaultRouteKey()</code> before running app.</li><li><code>widget</code>: The widget to be added to panel.</li><li><code>onClick</code>: Slot function connected to the widget&#39;s <code>clicked</code> signal. If you want to switch sub interfaces when clicking <code>widget</code>, it is recommended to write this slot function as <code>lambda: self.stackWidget.setCurrentWidget(self.xxxInterface) </code>.</li><li><code>position</code>: Where to add the <code>widget</code> to the panel. The following values are available: <ul><li><code>NavigationItemPosition.TOP</code>: add <code>widget</code> to the top layout of panel.</li><li><code>NavigationItemPosition.SCROLL</code>: add <code>widget</code> to the scroll layout of panel. You can scroll the widgets in scroll layout when there are too many menu items.</li><li><code>NavigationItemPosition.BOTTOM</code>: add <code>widget</code> to the bottom layout of panel.</li></ul></li><li><code>tooltip</code>: The tooltip of menu item.</li><li><code>parentRouteKey</code>: The route key of parent menu item, the widget of parent item must be the instance of <code>NavigationTreeWidgetBase</code></li></ul><h2 id="display-mode" tabindex="-1"><a class="header-anchor" href="#display-mode" aria-hidden="true">#</a> Display mode</h2><p>The navigation panel has four display modes:</p>`,10),_=n("li",null,[n("p",null,[n("code",null,"NavigationDisplayMode.EXPAND"),a(": An expanded left pane on large window widths (1008px or greater). "),n("img",{src:r,alt:""})])],-1),x=n("li",null,[n("p",null,[n("code",null,"NavigationDisplayMode.COMPACT"),a(": A left, icon-only, nav panel on medium window widths (1007px or less). "),n("img",{src:k,alt:""})])],-1),N=n("li",null,[n("p",null,[n("code",null,"NavigationDisplayMode.MENU"),a(": An expanded left menu (1007px or less). "),n("img",{src:m,alt:""})])],-1),P=n("code",null,"NavigationDisplayMode.MINIMAL",-1),W={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples/navigation3",target:"_blank",rel:"noopener noreferrer"},Q=n("p",null,[a("If you call "),n("code",null,"NavigationInterface.setExpandWidth()"),a(", the large window width (1008px) will change accordingly.")],-1),I=n("h2",{id:"more-examples",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#more-examples","aria-hidden":"true"},"#"),a(" More examples")],-1),T={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples/navigation",target:"_blank",rel:"noopener noreferrer"},A=n("p",null,[n("img",{src:t,alt:""})],-1),C={href:"https://github.com/zhiyiYo/PyQt-Fluent-Widgets/tree/master/examples/navigation3",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,[n("img",{src:o,alt:""})],-1);function K(M,q){const s=c("ExternalLinkIcon");return l(),u("div",null,[h,n("p",null,[a("PyQt Fluent Widgets provides a side navigation class "),g,a(". You can use it with "),b,a(" and put them in "),f,a(". Examples are available at "),n("a",y,[a("navigation2"),e(s)]),a(".")]),w,n("ul",null,[_,x,N,n("li",null,[n("p",null,[P,a(": Only a menu button on small window widths (you should add and manage the menu button to main window by yourself like "),n("a",W,[a("navigation3"),e(s)]),a(" does).")])])]),Q,I,n("p",null,[a("Here is an another style of navigation interface, and its corresponding example program is available at "),n("a",T,[a("navigation"),e(s)]),a(".")]),A,n("p",null,[a("Minimal display mode navigation interface is available at "),n("a",C,[a("navigation3"),e(s)]),a(".")]),E])}const F=p(v,[["render",K],["__file","index.html.vue"]]);export{F as default};
