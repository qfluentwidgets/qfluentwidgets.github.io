import{_ as p,a as i,b as o}from"./CustomFlipView-ececc3a8.js";import{_ as c,r as u,o as l,c as d,b as n,d as s,a as t,e}from"./app-cad4e71c.js";const r={},k={id:"flipview",tabindex:"-1"},m=n("a",{class:"header-anchor",href:"#flipview","aria-hidden":"true"},"#",-1),v={href:"https://pyqt-fluent-widgets.readthedocs.io/zh-cn/latest/autoapi/qfluentwidgets/components/widgets/flip_view/index.html#qfluentwidgets.components.widgets.flip_view.FlipView",target:"_blank",rel:"noopener noreferrer"},b=e('<p><img src="'+p+`" alt="FlipView"></p><p><code>FlipView</code> 组件非常适合在需要展示一组图片的场景中使用，可以用于实现一个图片查看器，用户可以通过翻页来查看每一张图片。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>flipView <span class="token operator">=</span> HorizontalFlipView<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 添加图片</span>
flipView<span class="token punctuation">.</span>addImages<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;image1.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;image2.png&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment"># 监听当前页码改变信号</span>
flipView<span class="token punctuation">.</span>currentIndexChanged<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token keyword">lambda</span> index<span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;当前页面：&quot;</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认情况下 <code>FlipView</code> 通过拉伸强制所有图片统一大小，可以设置缩放策略来保持图片的宽高比：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>flipView<span class="token punctuation">.</span>setAspectRatioMode<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>AspectRatioMode<span class="token punctuation">.</span>KeepAspectRatio<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>FlipView</code> 的视口和图片的默认大小为 480×270，调整大小的方式如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>flipView<span class="token punctuation">.</span>setItemSize<span class="token punctuation">(</span>QSize<span class="token punctuation">(</span><span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
flipView<span class="token punctuation">.</span>setFixedSize<span class="token punctuation">(</span>QSize<span class="token punctuation">(</span><span class="token number">320</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过添加图片间距和调整视口宽度，可以实现下述效果的翻转视图：</p><p><img src="`+i+`" alt="FlipViewRound"></p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>flipView<span class="token punctuation">.</span>setFixedSize<span class="token punctuation">(</span>QSize<span class="token punctuation">(</span><span class="token number">710</span><span class="token punctuation">,</span> <span class="token number">270</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
flipView<span class="token punctuation">.</span>setSpacing<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>

<span class="token comment"># 启用圆角</span>
flipView<span class="token punctuation">.</span>setBorderRadius<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),g={id:"flipimagedelegate",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#flipimagedelegate","aria-hidden":"true"},"#",-1),w={href:"https://pyqt-fluent-widgets.readthedocs.io/zh-cn/latest/autoapi/qfluentwidgets/components/widgets/flip_view/index.html#qfluentwidgets.components.widgets.flip_view.FlipImageDelegate",target:"_blank",rel:"noopener noreferrer"},f=e('<p><img src="'+o+`" alt="CustomFlipView"></p><p><code>FlipImageDelegate</code> 用于控制 <code>FlipView</code> 的绘制结果：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">CustomFlipItemDelegate</span><span class="token punctuation">(</span>FlipImageDelegate<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot; Custom flip item delegate &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">paint</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> painter<span class="token punctuation">:</span> QPainter<span class="token punctuation">,</span> option<span class="token punctuation">:</span> QStyleOptionViewItem<span class="token punctuation">,</span> index<span class="token punctuation">:</span> QModelIndex<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>paint<span class="token punctuation">(</span>painter<span class="token punctuation">,</span> option<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment"># draw mask</span>
        painter<span class="token punctuation">.</span>setBrush<span class="token punctuation">(</span>QColor<span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>setPen<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>NoPen<span class="token punctuation">)</span>
        rect <span class="token operator">=</span> option<span class="token punctuation">.</span>rect
        rect <span class="token operator">=</span> QRect<span class="token punctuation">(</span>rect<span class="token punctuation">.</span>x<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> rect<span class="token punctuation">.</span>y<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>drawRect<span class="token punctuation">(</span>rect<span class="token punctuation">)</span>

        <span class="token comment"># draw text</span>
        painter<span class="token punctuation">.</span>setPen<span class="token punctuation">(</span>Qt<span class="token punctuation">.</span>black<span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>setFont<span class="token punctuation">(</span>getFont<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> QFont<span class="token punctuation">.</span>Bold<span class="token punctuation">)</span><span class="token punctuation">)</span>
        painter<span class="token punctuation">.</span>drawText<span class="token punctuation">(</span>rect<span class="token punctuation">,</span> Qt<span class="token punctuation">.</span>AlignCenter<span class="token punctuation">,</span> <span class="token string">&#39;🥰\\n硝子酱一级棒卡哇伊&#39;</span><span class="token punctuation">)</span>

        painter<span class="token punctuation">.</span>restore<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token comment"># 使用自定义代理</span>
flipView<span class="token punctuation">.</span>setItemDelegate<span class="token punctuation">(</span>CustomFlipItemDelegate<span class="token punctuation">(</span>flipView<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function _(x,V){const a=u("ExternalLinkIcon");return l(),d("div",null,[n("h3",k,[m,s(),n("a",v,[s("FlipView"),t(a)])]),b,n("h3",g,[h,s(),n("a",w,[s("FlipImageDelegate"),t(a)])]),f])}const q=c(r,[["render",_],["__file","index.html.vue"]]);export{q as default};
