import{_ as p,a as i,b as u}from"./Edit_Light_Qss_Dialog-44576d9f.js";import{_ as r,r as c,o as d,c as k,a as e,w as a,e as l,b as n,d as s}from"./app-9a096067.js";const m={},h=l('<h2 id="theme-mode" tabindex="-1"><a class="header-anchor" href="#theme-mode" aria-hidden="true">#</a> Theme mode</h2><p>You can use the <code>setTheme()</code> method to switch the light/dark theme of PyQt-Fluent-Widgets. The parameter of <code>setTheme()</code> accepts the following three values:</p><ul><li><code>Theme.LIGHT</code>: Light theme</li><li><code>Theme.DARK</code>: Dark theme</li><li><code>Theme.AUTO</code>: Follow system theme. If the system theme cannot be detected, the light theme will be used.</li></ul><p><code>toggleTheme()</code> is used to toggle the theme mode. When the theme changes, <code>qconfig</code> will emit the <code>themeChanged</code> signal.</p><p>If you want to automatically switch the interface style when the theme changes, you can inherit <code>StyleSheetBase</code> and override the <code>path()</code> method. Suppose you have a <code>Window</code> class and its qss file paths are <code>qss/light/window.qss</code> and <code>qss/dark/window.qss</code>, the code can be written like this:</p>',5),b=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"from"),s(" enum "),n("span",{class:"token keyword"},"import"),s(` Enum
`),n("span",{class:"token keyword"},"from"),s(" qfluentwidgets "),n("span",{class:"token keyword"},"import"),s(" StyleSheetBase"),n("span",{class:"token punctuation"},","),s(" Theme"),n("span",{class:"token punctuation"},","),s(" isDarkTheme"),n("span",{class:"token punctuation"},","),s(` qconfig


`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"StyleSheet"),n("span",{class:"token punctuation"},"("),s("StyleSheetBase"),n("span",{class:"token punctuation"},","),s(" Enum"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
    `),n("span",{class:"token triple-quoted-string string"},'""" Style sheet  """'),s(`

    WINDOW `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"window"'),s(`

    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"path"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" theme"),n("span",{class:"token operator"},"="),s("Theme"),n("span",{class:"token punctuation"},"."),s("AUTO"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        theme `),n("span",{class:"token operator"},"="),s(" qconfig"),n("span",{class:"token punctuation"},"."),s("theme "),n("span",{class:"token keyword"},"if"),s(" theme "),n("span",{class:"token operator"},"=="),s(" Theme"),n("span",{class:"token punctuation"},"."),s("AUTO "),n("span",{class:"token keyword"},"else"),s(` theme
        `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token string-interpolation"},[n("span",{class:"token string"},'f"qss/'),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("theme"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"."),s("lower"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},"/"),n("span",{class:"token interpolation"},[n("span",{class:"token punctuation"},"{"),s("self"),n("span",{class:"token punctuation"},"."),s("value"),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token string"},'.qss"')]),s(`


`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Window"),n("span",{class:"token punctuation"},"("),s("QWidget"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`

    `),n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"__init__"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},","),s(" parent"),n("span",{class:"token operator"},"="),n("span",{class:"token boolean"},"None"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},":"),s(`
        `),n("span",{class:"token builtin"},"super"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),s("__init__"),n("span",{class:"token punctuation"},"("),s("parent"),n("span",{class:"token operator"},"="),s("parent"),n("span",{class:"token punctuation"},")"),s(`

        `),n("span",{class:"token comment"},"# apply style sheet to window"),s(`
        StyleSheet`),n("span",{class:"token punctuation"},"."),s("WINDOW"),n("span",{class:"token punctuation"},"."),n("span",{class:"token builtin"},"apply"),n("span",{class:"token punctuation"},"("),s("self"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<FStyleSheet>")]),s(`
`),n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<QMetaEnum>")]),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"StyleSheet"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),s(" qfluentwidgets"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token class-name"},"StyleSheetBase")]),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
   Q_OBJECT

`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),s(`
   `),n("span",{class:"token keyword"},"enum"),s(),n("span",{class:"token class-name"},"Name"),s(),n("span",{class:"token punctuation"},"{"),s(" Window "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"0"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
   `),n("span",{class:"token function"},"Q_ENUM"),n("span",{class:"token punctuation"},"("),s("Name"),n("span",{class:"token punctuation"},")"),s(`

   `),n("span",{class:"token keyword"},"explicit"),s(),n("span",{class:"token function"},"StyleSheet"),n("span",{class:"token punctuation"},"("),s("Name name"),n("span",{class:"token punctuation"},","),s(" QObject"),n("span",{class:"token operator"},"*"),s(" parent "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"StyleSheetBase"),n("span",{class:"token punctuation"},"("),s("parent"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token function"},"name_"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),n("span",{class:"token punctuation"},"}"),s(`

   `),n("span",{class:"token keyword"},"virtual"),s(" QString "),n("span",{class:"token function"},"path"),n("span",{class:"token punctuation"},"("),s("qfluentwidgets"),n("span",{class:"token double-colon punctuation"},"::"),s("Theme theme "),n("span",{class:"token operator"},"="),s(" qfluentwidgets"),n("span",{class:"token double-colon punctuation"},"::"),s("Theme"),n("span",{class:"token double-colon punctuation"},"::"),s("Auto"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token keyword"},"override"),s(`
   `),n("span",{class:"token punctuation"},"{"),s(`
      QString tn`),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),s("t "),n("span",{class:"token operator"},"=="),s(" Theme"),n("span",{class:"token double-colon punctuation"},"::"),s("Auto"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
         tn `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"isDarkTheme"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"?"),s(),n("span",{class:"token string"},'"dark"'),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},'"light"'),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
         tn `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token function"},"themeName"),n("span",{class:"token punctuation"},"("),s("t"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"toLower"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token punctuation"},"}"),s(`

      QMetaEnum e `),n("span",{class:"token operator"},"="),s(" QMetaEnum"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"fromType"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),s("Name"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"auto"),s(" name "),n("span",{class:"token operator"},"="),s(" e"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"valueToKey"),n("span",{class:"token punctuation"},"("),n("span",{class:"token generic-function"},[n("span",{class:"token function"},"static_cast"),n("span",{class:"token generic class-name"},[n("span",{class:"token operator"},"<"),n("span",{class:"token keyword"},"int"),n("span",{class:"token operator"},">")])]),n("span",{class:"token punctuation"},"("),s("name_"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token function"},"QString"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'":/gallery/qss/%1/%2.qss"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"arg"),n("span",{class:"token punctuation"},"("),s("tn"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"arg"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
   `),n("span",{class:"token punctuation"},"}"),s(`

   `),n("span",{class:"token keyword"},"static"),s(" StyleSheet"),n("span",{class:"token operator"},"*"),s(),n("span",{class:"token function"},"applyTo"),n("span",{class:"token punctuation"},"("),s("Name name"),n("span",{class:"token punctuation"},","),s(" QWidget"),n("span",{class:"token operator"},"*"),s(" widget"),n("span",{class:"token punctuation"},","),s(" qfluentwidgets"),n("span",{class:"token double-colon punctuation"},"::"),s("Theme theme "),n("span",{class:"token operator"},"="),s(" qfluentwidgets"),n("span",{class:"token double-colon punctuation"},"::"),s("Theme"),n("span",{class:"token double-colon punctuation"},"::"),s("Auto"),n("span",{class:"token punctuation"},")"),s(`
   `),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token keyword"},"auto"),s(" s "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"StyleSheet"),n("span",{class:"token punctuation"},"("),s("name"),n("span",{class:"token punctuation"},","),s(" widget"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      s`),n("span",{class:"token operator"},"->"),n("span",{class:"token function"},"apply"),n("span",{class:"token punctuation"},"("),s("widget"),n("span",{class:"token punctuation"},","),s(" theme"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
      `),n("span",{class:"token keyword"},"return"),s(" s"),n("span",{class:"token punctuation"},";"),s(`
   `),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"private"),n("span",{class:"token operator"},":"),s(`
   Name name_`),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Window"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token base-clause"},[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"QWidget")]),s(`
`),n("span",{class:"token punctuation"},"{"),s(`
   Q_OBJECT

`),n("span",{class:"token keyword"},"public"),n("span",{class:"token operator"},":"),s(`
   `),n("span",{class:"token keyword"},"explicit"),s(),n("span",{class:"token function"},"Window"),n("span",{class:"token punctuation"},"("),s("QWidget "),n("span",{class:"token operator"},"*"),s("parent "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"nullptr"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"QWidget"),n("span",{class:"token punctuation"},"("),s("parent"),n("span",{class:"token punctuation"},")"),s(`
   `),n("span",{class:"token punctuation"},"{"),s(`
      `),n("span",{class:"token comment"},"// apply style sheet to window"),s(`
      `),n("span",{class:"token class-name"},"StyleSheet"),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"applyTo"),n("span",{class:"token punctuation"},"("),s("StyleSheet"),n("span",{class:"token double-colon punctuation"},"::"),s("Window"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
   `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("h2",{id:"customize-style",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#customize-style","aria-hidden":"true"},"#"),s(" Customize style")],-1),v=n("p",null,[s("If you are dissatisfied with the style of the built-in components and want to make minor adjustments to them, you can use "),n("code",null,"setCustomStyleSheet()"),s(" to add new styles based on the existing style. The function signature is as follows:")],-1),w=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[n("span",{class:"token keyword"},"def"),s(),n("span",{class:"token function"},"setCustomStyleSheet"),n("span",{class:"token punctuation"},"("),s("widget"),n("span",{class:"token punctuation"},":"),s(" QWidget"),n("span",{class:"token punctuation"},","),s(" lightQss"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token builtin"},"str"),n("span",{class:"token punctuation"},","),s(" darkQss"),n("span",{class:"token punctuation"},":"),s(),n("span",{class:"token builtin"},"str"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"-"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token boolean"},"None"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),f=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"setCustomStyleSheet"),n("span",{class:"token punctuation"},"("),s("QWidget"),n("span",{class:"token operator"},"*"),s(" widget"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"const"),s(" QString"),n("span",{class:"token operator"},"&"),s(" lightQss"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"const"),s(" QString"),n("span",{class:"token operator"},"&"),s(" darkQss"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),_=n("p",null,[s("where "),n("code",null,"widget"),s(" is the component that needs its style adjusted, "),n("code",null,"lightQss"),s(" and "),n("code",null,"darkQss"),s(" are the custom styles added for light/dark themes.")],-1),S=n("p",null,[s("For example, let's adjust the border-radius of a "),n("code",null,"PushButton"),s(" to 10px:")],-1),q=n("div",{class:"language-python line-numbers-mode","data-ext":"py"},[n("pre",{class:"language-python"},[n("code",null,[s("button "),n("span",{class:"token operator"},"="),s(" PushButton"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},"'Button'"),n("span",{class:"token punctuation"},","),s(" self"),n("span",{class:"token punctuation"},")"),s(`

`),n("span",{class:"token comment"},"# add custom qss"),s(`
qss `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},"'PushButton{border-radius: 10px}'"),s(`
setCustomStyleSheet`),n("span",{class:"token punctuation"},"("),s("button"),n("span",{class:"token punctuation"},","),s(" qss"),n("span",{class:"token punctuation"},","),s(" qss"),n("span",{class:"token punctuation"},")"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),Q=n("div",{class:"language-cpp line-numbers-mode","data-ext":"cpp"},[n("pre",{class:"language-cpp"},[n("code",null,[n("span",{class:"token macro property"},[n("span",{class:"token directive-hash"},"#"),n("span",{class:"token directive keyword"},"include"),s(),n("span",{class:"token string"},"<FStyleSheet>")]),s(`

`),n("span",{class:"token keyword"},"auto"),s(" button "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token function"},"PushButton"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"Button"'),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`

`),n("span",{class:"token comment"},"// add custom qss"),s(`
QString qss `),n("span",{class:"token operator"},"="),s(),n("span",{class:"token string"},'"PushButton{border-radius: 10px}"'),n("span",{class:"token punctuation"},";"),s(`
qfluentwidgets`),n("span",{class:"token double-colon punctuation"},"::"),n("span",{class:"token function"},"setCustomStyleSheet"),n("span",{class:"token punctuation"},"("),s("button"),n("span",{class:"token punctuation"},","),s(" qss"),n("span",{class:"token punctuation"},","),s(" qss"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=l('<p>In Qt Designer, you can achieve custom styling by adding dynamic properties. Here are the steps:</p><ol><li><p>Add a dynamic property of type &quot;String&quot;.</p><p><img src="'+p+'" alt="Add String Dynamic Property"></p></li><li><p>In the &quot;Create Dynamic Property&quot; dialog, set the property name as <code>lightCustomQss</code> for the light mode and <code>darkCustomQss</code> for the dark mode.</p><p><img src="'+i+'" alt="Set name"></p></li><li><p>Click the <code>...</code> button next to the property and edit <code>lightCustomQss</code> in the &quot;Edit Text&quot; dialog.</p><p><img src="'+u+'" alt="Set qss"></p></li></ol><h2 id="theme-color" tabindex="-1"><a class="header-anchor" href="#theme-color" aria-hidden="true">#</a> Theme color</h2><p><code>themeColor()</code> returns current theme color, and you can use <code>setThemeColor()</code> method to change the theme color of QFluentWidgets. This method accepts the following three types of parameters:</p><ul><li><code>QColor</code></li><li><code>Qt.GlobalColor</code></li><li><code>str</code>: Hex color strings or color names, such as <code>#0065d5</code> or <code>red</code>.</li></ul><p>When the theme color changes, the config instance managed by <code>qconfig</code> will emit the <code>themeColorChanged</code> signal.</p>',6);function C(x,W){const t=c("CodeGroupItem"),o=c("CodeGroup");return d(),k("div",null,[h,e(o,null,{default:a(()=>[e(t,{title:"Python"},{default:a(()=>[b]),_:1}),e(t,{title:"C++"},{default:a(()=>[y]),_:1})]),_:1}),g,v,e(o,null,{default:a(()=>[e(t,{title:"Python"},{default:a(()=>[w]),_:1}),e(t,{title:"C++"},{default:a(()=>[f]),_:1})]),_:1}),_,S,e(o,null,{default:a(()=>[e(t,{title:"Python"},{default:a(()=>[q]),_:1}),e(t,{title:"C++"},{default:a(()=>[Q]),_:1})]),_:1}),T])}const P=r(m,[["render",C],["__file","index.html.vue"]]);export{P as default};
